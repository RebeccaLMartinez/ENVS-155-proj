{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Interactive Timeline\"\n",
        "format: html\n",
        "execute:\n",
        "  eval: false\n",
        "page-layout: full\n",
        "\n",
        "---\n",
        "\n",
        "## Lompoc Edible Trail Project Timeline\n",
        "\n",
        "::: {.timeline}\n",
        "\n",
        "::: {.timeline-item}\n",
        "<button class=\"timeline-header\">Phase 1: Planning and Community Engagement ▼</button>\n",
        "<div class=\"timeline-content\">\n",
        "<ul>\n",
        "  <li>Community Introduction and Early Feedback</li>\n",
        "  <li>Formation of Advisory Committee and Core Partnerships</li>\n",
        "  <li>Collaborative Site Identification and Selection</li>\n",
        "  <li>Fundraising and Resource Acquisition</li>\n",
        "</ul>\n",
        "</div>\n",
        ":::\n",
        "\n",
        "::: {.timeline-item}\n",
        "<button class=\"timeline-header\">Phase 2: Installation and Activation ▼</button>\n",
        "<div class=\"timeline-content\">\n",
        "<ul>\n",
        "  <li>Final Design and Site Preparation</li>\n",
        "  <li>Community Planting and Trail Build-Out</li>\n",
        "  <li>Community Programming Launch</li>\n",
        "</ul>\n",
        "</div>\n",
        ":::\n",
        "\n",
        "::: {.timeline-item}\n",
        "<button class=\"timeline-header\">Phase 3: Stewardship, Evaluation, and Expansion Planning ▼</button>\n",
        "<div class=\"timeline-content\">\n",
        "<ul>\n",
        "  <li>Ongoing Maintenance and Volunteer Stewardship</li>\n",
        "  <li>Monitoring and Feedback Loops</li>\n",
        "  <li>Expansion and Policy Integration</li>\n",
        "</ul>\n",
        "</div>\n",
        ":::\n",
        "\n",
        ":::\n",
        "\n",
        "\n",
        "```{css}\n",
        ".timeline {\n",
        "  max-width: 800px;\n",
        "  margin: 0 auto;\n",
        "  border-left: 4px solid #4CAF50;\n",
        "  padding-left: 20px;\n",
        "  font-family: Arial, sans-serif;\n",
        "}\n",
        ".timeline-item {\n",
        "  margin-bottom: 20px;\n",
        "  position: relative;\n",
        "}\n",
        ".timeline-header {\n",
        "  background: #4CAF50;\n",
        "  border: none;\n",
        "  color: white;\n",
        "  font-weight: bold;\n",
        "  font-size: 1.1em;\n",
        "  padding: 10px 15px;\n",
        "  width: 100%;\n",
        "  text-align: left;\n",
        "  cursor: pointer;\n",
        "  border-radius: 4px;\n",
        "}\n",
        ".timeline-content {\n",
        "  background: #f0f8f0;\n",
        "  margin-top: 5px;\n",
        "  padding: 10px 15px;\n",
        "  border-radius: 4px;\n",
        "  display: none;\n",
        "  color: #333;\n",
        "  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n",
        "}\n",
        ".timeline-item::before {\n",
        "  content: \"\";\n",
        "  position: absolute;\n",
        "  left: -11px;\n",
        "  top: 20px;\n",
        "  width: 20px;\n",
        "  height: 20px;\n",
        "  background: #4CAF50;\n",
        "  border-radius: 50%;\n",
        "  border: 4px solid white;\n",
        "  box-shadow: 0 0 5px #4CAF50;\n",
        "}\n",
        "```\n",
        "\n",
        "```{js}\n",
        "\n",
        "document.addEventListener(\"DOMContentLoaded\", function() {\n",
        "  const headers = document.querySelectorAll(\".timeline-header\");\n",
        "  headers.forEach(header => {\n",
        "    header.addEventListener(\"click\", () => {\n",
        "      const content = header.nextElementSibling;\n",
        "      const isOpen = content.style.display === \"block\";\n",
        "      document.querySelectorAll(\".timeline-content\").forEach(el => el.style.display = \"none\");\n",
        "      document.querySelectorAll(\".timeline-header\").forEach(btn => btn.textContent = btn.textContent.replace(\"▲\", \"▼\"));\n",
        "      if (!isOpen) {\n",
        "        content.style.display = \"block\";\n",
        "        header.textContent = header.textContent.replace(\"▼\", \"▲\");\n",
        "      }\n",
        "    });\n",
        "  });\n",
        "});\n",
        "\n",
        "```"
      ],
      "id": "0a5e4fe4"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}